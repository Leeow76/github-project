{"version":3,"sources":["components/UserPage/UserPage.module.scss","components/UserListPage/UserList/User/User.module.scss","components/UserListPage/UserListPage.module.scss","components/UserListPage/ViewModes/ViewModes.module.scss","components/UserListPage/UserSearch/UserSearch.module.scss","components/UserListPage/UserList/UserList.module.scss","components/UserListPage/UserSearch/RecentSearches/RecentSearches.module.scss","store/actionTypes.ts","store/actions/commonUserActions.ts","store/actions/userPageActions.ts","hooks/useDocTitle.js","components/UserPage/UserPage.tsx","components/UserListPage/api.ts","store/api.ts","components/UserListPage/UserListSlice.ts","components/UserListPage/UserList/User/User.tsx","components/UserListPage/UserList/UserList.tsx","components/UserListPage/ViewModes/ViewModes.tsx","components/UserListPage/UserSearch/RecentSearches/RecentSearches.tsx","components/UserListPage/UserSearch/UserSearch.tsx","components/UserListPage/UserListPage.tsx","App.tsx","store/reducers/userPageReducer.ts","store/reducers/reducer.ts","store/store.ts","index.tsx"],"names":["module","exports","FETCH_USER_SUCCESS","FETCH_USER_ERROR","FETCH_USER_LOADING","FETCH_USERPAGE_REPOS","FETCH_USERPAGE_ORGS","addTokenIfExists","process","console","log","fetchUserRepos","user","page","dispatch","a","settings","method","headers","Authorization","fetch","json","data","message","type","actionTypes","repos","Error","fetchUserSuccess","fetchUserError","error","fetchUserOrgs","orgs","useDocTitle","title","useState","doctitle","setDocTitle","useEffect","document","UserPage","useSelector","state","userPageReducer","userPageUser","userError","userStatus","useDispatch","formattedPathname","useLocation","pathname","replace","usersPageActions","userRepos","undefined","length","map","repo","className","styles","name","id","userOrgs","org","href","login","target","rel","src","avatar_url","alt","to","back","image","info","html_url","orgList","usersApi","query","sort","URLSearchParams","q","per_page","toString","items","users","userReposApi","fetchUsers","createAsyncThunk","fetchParams","response","forEach","userListSlice","createSlice","initialState","usersError","usersStatus","viewMode","latestSearch","reducers","setViewMode","action","payload","setLatestSearch","setSearchValue","extraReducers","builder","addCase","pending","fulfilled","rejected","targetUser","find","actions","User","index","itemRepo","item","itemImage","itemInfo","itemRepos","UserList","listedUsers","list","ViewModes","gridStyles","listStyles","defaultButtonStyles","modeButton","modeButton__active","viewModes","onClick","RecentSearches","search","localStorage","getItem","recentSearches","setRecentSearches","recentSearchesHtml","recentSearchesCount","parsedData","JSON","parse","mappedSearches","searchValue","recentSearch","UserSearch","searchUsers","trim","clearButton","clear","field","input__clearable","input","placeholder","onChange","e","value","onKeyDown","code","preventDefault","disabled","UserListPage","userListPageReducer","defaultPageTitle","searchPageTitle","dispatchSearch","searchSort","includeSearchString","saveSearchToLocalStorage","includes","unshift","pop","setItem","stringify","searchTitle","wrapper","toolbar","App","exact","path","component","userPageState","fetchUserListReposUser","fetchUserListOrgsUser","combineReducers","userListReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","thunkMiddleware","devTools","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c430a44f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"UserPage_back__1AUz6\",\"title\":\"UserPage_title__AvzFs\",\"user\":\"UserPage_user__2nV21\",\"info\":\"UserPage_info__3pfa_\",\"name\":\"UserPage_name__2KRp5\",\"image\":\"UserPage_image__2u9DM\",\"orgs\":\"UserPage_orgs__1tO0f\",\"orgList\":\"UserPage_orgList__1CgXG\",\"org\":\"UserPage_org__3NTxU\",\"repos\":\"UserPage_repos__3WQwU\",\"repo\":\"UserPage_repo__3zwOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"User_item__Pu7Gx\",\"itemImage\":\"User_itemImage__1zfU4\",\"itemInfo\":\"User_itemInfo__1s84b\",\"itemRepos\":\"User_itemRepos__1PHyW\",\"itemRepo\":\"User_itemRepo__3DAhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"UserListPage_title__XF6iv\",\"toolbar\":\"UserListPage_toolbar__3G7ac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewModes\":\"ViewModes_viewModes__31sAX\",\"modeButton\":\"ViewModes_modeButton__1r-0A\",\"modeButton__active\":\"ViewModes_modeButton__active__uj8ta\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"UserSearch_field__3_nb6\",\"input\":\"UserSearch_input__lSKu_\",\"input__clearable\":\"UserSearch_input__clearable__1r55B\",\"clear\":\"UserSearch_clear__3u6kt\",\"viewModes\":\"UserSearch_viewModes__1Qs_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"UserList_list__1vdAN\",\"listMode\":\"UserList_listMode__3lEJj\",\"gridMode\":\"UserList_gridMode__1WYLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recentSearches\":\"RecentSearches_recentSearches__pU0lf\",\"recentSearch\":\"RecentSearches_recentSearch__12bE4\"};","// Users\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\nexport const FETCH_USERS_ERROR = \"FETCH_USERS_ERROR\";\nexport const FETCH_USERS_LOADING = \"FETCH_USERS_LOADING\";\nexport const FETCH_USERLIST_REPOS = \"FETCH_USERLIST_REPOS\";\nexport const SET_SEARCH_VALUE = \"SET_SEARCH_VALUE\";\nexport const SET_VIEW_MODE = \"SET_VIEW_MODE\";\n\n// User\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\nexport const FETCH_USER_ERROR = \"FETCH_USER_ERROR\";\nexport const FETCH_USER_LOADING = \"FETCH_USER_LOADING\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const FETCH_USERPAGE_REPOS = \"FETCH_USERPAGE_REPOS\";\nexport const FETCH_USERPAGE_ORGS = \"FETCH_USERPAGE_ORGS\";\n","import { Dispatch } from \"redux\";\n\nimport * as actionTypes from \"../actionTypes\";\n\n// Add token if it exists in .env (local development personal access token to increase request limit to 5000)\nexport const addTokenIfExists = () => {\n  if (\"REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN\" in process.env) {\n    return \"Token \" + process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN;\n  } else {\n    console.log(\n      'Limited to 60 requests because no personal access token (\"REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN\") set in .env'\n    );\n  }\n};\n\n// Fetch 3 single user repos.\nexport const fetchUserRepos = (user: string, page: \"userList\" | \"userPage\") => async (dispatch: Dispatch<any>) => {\n  let settings: any = {\n    method: \"GET\",\n    headers: {\n      Authorization: addTokenIfExists(),\n    },\n  };\n  try {\n    const data = await (\n      await fetch(\n        `https://api.github.com/users/${user}/repos?per_page=3&page=1`,\n        settings\n      )\n    ).json();\n    if (data.message !== \"Not Found\") {\n      // Different action for user page and user list.\n      const dispatchType = page === \"userList\" ? actionTypes.FETCH_USERLIST_REPOS : page === \"userPage\" ? actionTypes.FETCH_USERPAGE_REPOS : null;\n      dispatch({\n        type: dispatchType,\n        user: user,\n        repos: data,\n      });\n    } else {\n      throw new Error(data.message);\n    }\n  } catch (error) {\n    console.log(error)\n  }\n};","import { Dispatch } from \"redux\";\n\nimport * as actionTypes from \"../actionTypes\";\nimport { fetchUserRepos, addTokenIfExists } from './commonUserActions';\n\n// User page status actions\nconst fetchUserLoading = () => (dispatch: Dispatch<any>) => {\n  dispatch({\n    type: actionTypes.FETCH_USER_LOADING,\n  });\n};\nconst fetchUserSuccess = (user: User[]) => (dispatch: Dispatch<any>) => {\n  dispatch({\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: user,\n  });\n};\nconst fetchUserError = (error: string) => (dispatch: Dispatch<any>) => {\n  dispatch({\n    type: actionTypes.FETCH_USER_ERROR,\n    error: error,\n  });\n};\n\n// Fetch user for user page\nexport const fetchUser = (user: string) => async (dispatch: Dispatch<any>) => {\n  dispatch(fetchUserLoading());\n  let settings: any = {\n    method: \"GET\",\n    headers: {\n      Authorization: addTokenIfExists(),\n    },\n  };\n  try {\n    const data = await (\n      await fetch(\n        `https://api.github.com/users/${user}`,\n        settings\n      )\n    ).json();\n    if (data.message !== \"Not Found\") {\n      dispatch(fetchUserSuccess(data));\n      dispatch(fetchUserRepos(user, \"userPage\"));\n      dispatch(fetchUserOrgs(user));\n    } else {\n      throw new Error(data.message);\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch(fetchUserError(error));\n  }\n};\n\n// Fetch 3 single user organizations.\nconst fetchUserOrgs = (user: string) => async (dispatch: Dispatch<any>) => {\n  let settings: any = {\n    method: \"GET\",\n    headers: {\n      Authorization: addTokenIfExists(),\n    },\n  };\n  try {\n    const data = await (\n      await fetch(\n        `https://api.github.com/users/${user}/orgs`,\n        settings\n      )\n    ).json();\n    if (data.message !== \"Not Found\") {\n      // Different action for user page and user list.\n      dispatch({\n        type: actionTypes.FETCH_USERPAGE_ORGS,\n        user: user,\n        orgs: data,\n      });\n    } else {\n      throw new Error(data.message);\n    }\n  } catch (error) {\n    console.log(error)\n  }\n};\n","import { useEffect, useState } from \"react\";\n\nconst useDocTitle = title => {\n  const [doctitle, setDocTitle] = useState(title);\n\n  useEffect(() => {\n    document.title = doctitle;\n  }, [doctitle]);\n\n  return [setDocTitle];\n};\n\nexport {useDocTitle};","import React, { ReactElement, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector, RootStateOrAny } from \"react-redux\";\n\nimport * as usersPageActions from \"../../store/actions/userPageActions\";\nimport styles from \"./UserPage.module.scss\";\nimport { useDocTitle } from \"../../hooks/useDocTitle\";\n\nexport default function UserPage(): ReactElement {\n  const [setDocTitle] = useDocTitle();\n  // REDUX STATE DATA\n  const user: User = useSelector(\n    (state: RootStateOrAny) => state.userPageReducer.userPageUser\n  );\n  const userError: string = useSelector(\n    (state: RootStateOrAny) => state.userPageReducer.userError\n  );\n  const userStatus: string = useSelector(\n    (state: RootStateOrAny) => state.userPageReducer.userStatus\n  );\n\n  // REDUX DISPATCHES\n  const dispatch: Dispatch<any> = useDispatch();\n\n  // Fetch user based on url path\n  const { pathname } = useLocation();\n  const formattedPathname = pathname.replace(/^\\/+/, \"\");\n  useEffect(() => {\n    dispatch(usersPageActions.fetchUser(formattedPathname));\n    setDocTitle(`User \"${formattedPathname}\"`);\n  }, [dispatch, formattedPathname, setDocTitle]);\n\n  let userRepos = undefined;\n  if (!user || !user.repos) {\n    userRepos = <p>LOADING...</p>;\n  } else if (user.repos.length === 0) {\n    userRepos = <p>No repos to display</p>;\n  } else if (user.repos.length > 0) {\n    userRepos = user.repos.map((repo: any) => {\n      return (\n        <p className={`${styles.repo} textSmall`} key={repo.id}>\n          {repo.name}\n        </p>\n      );\n    });\n  }\n\n  let userOrgs = undefined;\n  if (!user || !user.orgs) {\n    userOrgs = <p>LOADING...</p>;\n  } else if (user.orgs.length === 0) {\n    userOrgs = <p>No organizations to display</p>;\n  } else if (user.orgs.length > 0) {\n    userOrgs = user.orgs.map((org: any) => {\n      return (\n        <a\n          href={`https://github.com/${org.login}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          key={org.id}\n          className={`${styles.org} textSmall`}\n        >\n          <img src={org.avatar_url} alt={org.login} />\n          {org.login}\n        </a>\n      );\n    });\n  }\n\n  return (\n    <>\n      <Link\n        to=\"/\"\n        className={`button button_secondary button_iconAndText ${styles.back}`}\n      >\n        <span className=\"material-icons-round\">chevron_left</span>\n        <span>Back</span>\n      </Link>\n\n      {userStatus === \"loading\" && (\n        <div className=\"message__neutral\">LOADING...</div>\n      )}\n      {userStatus === \"failed\" && (\n        <div className=\"message__neutral\">{userError}</div>\n      )}\n      {userStatus === \"success\" && (\n        <>\n          <h1 className={styles.title}>{user.login}</h1>\n          <div className={styles.user}>\n            <img\n              className={styles.image}\n              src={user.avatar_url}\n              title={user.login}\n              alt={user.login}\n            />\n            <div className={styles.info}>\n              <h2 className={styles.name}>\n                <a href={user.html_url} rel=\"noreferrer\" target=\"_blank\">\n                  {user.name ? user.name : user.login}\n                </a>\n              </h2>\n              <p>{user.type}</p>\n              <div className={styles.repos}>\n                <h3>User repositories</h3>\n                {userRepos}\n              </div>\n              <div className={styles.orgs}>\n                <h3>User organizations</h3>\n                <div className={styles.orgList}>{userOrgs}</div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","import { addTokenIfExists } from '../../store/actions/commonUserActions'\n\nconst searchUsersBaseUrl = \"https://api.github.com/search/users?\";\n\nconst usersApi =\n  async (query: any, sort: any) => {\n    const settings: any = {\n      method: \"GET\",\n      headers: {\n        Authorization: addTokenIfExists(),\n      },\n    };\n    try {\n      const data = await (\n        await fetch(\n          searchUsersBaseUrl +\n            new URLSearchParams({\n              q: query,\n              sort: sort,\n              type: \"Users\",\n              per_page: \"10\",\n              page: \"1\",\n            }).toString(),\n          settings\n        )\n      ).json();\n      if (data.items) {\n        const users = data.items;\n        return users\n      } else {\n        return []\n      }\n    } catch (error) {\n      throw new Error(\"Could not find users\");\n    }\n  };\n\nexport default usersApi","import { addTokenIfExists } from './actions/commonUserActions'\n\n// Fetch 3 single user repos.\nexport const userReposApi = async (user: string) => {\n  let settings: any = {\n    method: \"GET\",\n    headers: {\n      Authorization: addTokenIfExists(),\n    },\n  };\n  try {\n    const data = await (\n      await fetch(\n        `https://api.github.com/users/${user}/repos?per_page=3&page=1`,\n        settings\n      )\n    ).json();\n    if (data.message !== \"Not Found\") {\n      return {\n        user: user,\n        repos: data\n      }\n    } else {\n      return {\n        user: user,\n        repos: null,\n      }\n    }\n  } catch (error) {\n    throw new Error(\"Could not fetch user repositories\");\n  }\n};","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { UserListState, UserReposPayload, ViewMode } from './types'\nimport usersApi from './api'\nimport { userReposApi } from '../../store/api'\n\nconst initialState: UserListState = {\n  users: [],\n  usersError: null,\n  usersStatus: \"idle\",\n  viewMode: \"listMode\",\n  latestSearch: \"\"\n}\n\nexport const fetchUsers =  createAsyncThunk(\n  'userListPageSlice/fetchUsers',\n  async (\n    fetchParams: {\n      query: string,\n      sort: string\n    },\n    {dispatch}\n  ) => {\n    const {query, sort} = fetchParams\n    const response = await usersApi(query, sort)\n\n    // Fetch repos for users\n    if (response.length > 0) {\n      response.forEach((response: User) => {\n        dispatch(fetchUserRepos({user: response.login}))\n      })\n    }\n\n    return response\n  }\n)\n\nexport const fetchUserRepos =  createAsyncThunk(\n  'userListPageSlice/fetchUserRepos',\n  async (fetchParams: {user: string}) => {\n    const {user} = fetchParams\n    const response = await userReposApi(user)\n    return response\n  }\n)\n\nexport const userListSlice = createSlice({\n  name: 'userListPageSlice',\n  initialState,\n  reducers: {\n    setViewMode: (state, action: PayloadAction<ViewMode>) => {\n      state.viewMode = action.payload\n    },\n    setLatestSearch: (state, action: PayloadAction<string>) => {\n      state.latestSearch = action.payload\n    },\n    setSearchValue: (state, action: PayloadAction<string>) => {\n      state.latestSearch = action.payload\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(\n      fetchUsers.pending, (state: UserListState) => {\n        state.usersStatus = \"loading\"\n        state.users = []\n      },\n    )\n    builder.addCase(\n      fetchUsers.fulfilled, (state: UserListState, action: PayloadAction<User[]>) => {\n        state.usersStatus = \"success\"\n        state.users = action.payload\n      },\n    )\n    builder.addCase(\n      fetchUsers.rejected, (state: UserListState) => {\n        state.usersStatus = \"failed\"\n        state.users = []\n      },\n    )\n    builder.addCase(\n      fetchUserRepos.fulfilled, (state: UserListState, action: PayloadAction<UserReposPayload>) => {\n        const targetUser = state.users?.find(\n          (user: User) => user.login === action.payload.user\n        )\n        if (targetUser) {\n          targetUser[\"repos\"] = action.payload.repos;\n        }\n      },\n    )\n  }\n})\n\nexport const { setViewMode, setLatestSearch, setSearchValue } = userListSlice.actions\n\nexport default userListSlice.reducer","import { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./User.module.scss\";\n\ninterface Props {\n  user: User;\n}\n\nexport default function User({ user }: Props): ReactElement {\n  // Props\n  const { login, avatar_url, type, repos } = user;\n\n  let userRepos = undefined;\n\n  if (!repos) {\n    userRepos = <p>LOADING...</p>;\n  } else if (repos.length === 0) {\n    userRepos = <p>No repos to display</p>;\n  } else {\n    userRepos = repos.map((repo, index) => {\n      return (\n        <span className={styles.itemRepo + \" textSmall\"} key={index}>\n          {repo[\"name\"]}\n        </span>\n      );\n    });\n  }\n\n  return (\n    <li className={styles.item}>\n      <span className={styles.itemImage}>\n        <Link to={login}>\n          <img src={avatar_url} title={login} alt={login} />\n        </Link>\n      </span>\n      <div className={styles.itemInfo}>\n        <h3>\n          <Link to={login}>{login}</Link>\n        </h3>\n        <p>{type}</p>\n      </div>\n      <div className={styles.itemRepos}>\n        <h3>User repositories</h3>\n        {userRepos}\n      </div>\n    </li>\n  );\n}\n","import { ReactElement } from \"react\";\n\nimport User from \"./User/User\";\nimport styles from \"./UserList.module.scss\";\n\ninterface Props {\n  users: User[];\n  usersStatus: string;\n  usersError: string | null;\n  viewMode: string;\n}\n\nexport default function UserList({\n  users,\n  usersStatus,\n  usersError,\n  viewMode,\n}: Props): ReactElement {\n  let listedUsers = null;\n  if (usersStatus === \"success\" && users) {\n    listedUsers = users.map((user: User) => {\n      return <User key={user.id} user={user} />;\n    });\n  }\n  return (\n    <ul className={`${styles[viewMode]} ${styles.list}`}>\n      {usersStatus === \"success\" && users.length > 0 && <>{listedUsers}</>}\n      {usersStatus === \"success\" && users.length === 0 && (\n        <div className=\"message__neutral\">No users found</div>\n      )}\n      {usersStatus === \"loading\" && (\n        <div className=\"message__neutral\">LOADING...</div>\n      )}\n      {usersStatus === \"failed\" && (\n        <div className=\"message__neutral\">{usersError}</div>\n      )}\n    </ul>\n  );\n}\n","import { ReactElement } from \"react\";\n\nimport styles from \"./ViewModes.module.scss\";\n\ninterface Props {\n  viewMode: \"gridMode\" | \"listMode\";\n  setViewMode: Function;\n}\n\nexport default function ViewModes({\n  viewMode,\n  setViewMode,\n}: Props): ReactElement {\n  let gridStyles = \"modeButton_gridMode \";\n  let listStyles = \"modeButton_listMode \";\n  const defaultButtonStyles = `button ${styles.modeButton}`;\n  if (viewMode === \"listMode\") {\n    gridStyles += defaultButtonStyles;\n    listStyles += `${defaultButtonStyles} ${styles.modeButton__active}`;\n  } else {\n    gridStyles += `${defaultButtonStyles} ${styles.modeButton__active}`;\n    listStyles += defaultButtonStyles;\n  }\n  const viewModes = (\n    <div className={styles.viewModes}>\n      <button\n        onClick={() =>\n          viewMode === \"gridMode\" ? setViewMode(\"listMode\") : null\n        }\n        className={listStyles}\n      >\n        <span className=\"material-icons-round\">view_stream</span>\n      </button>\n      <button\n        onClick={() =>\n          viewMode === \"listMode\" ? setViewMode(\"gridMode\") : null\n        }\n        className={gridStyles}\n      >\n        <span className=\"material-icons-round\">grid_view</span>\n      </button>\n    </div>\n  );\n  return <>{viewModes}</>;\n}\n","import { ReactElement, useEffect, useState } from \"react\";\n\nimport styles from \"./RecentSearches.module.scss\";\n\ninterface Props {\n  search: Function;\n  latestSearch: string | \"\";\n}\n\nexport default function RecentSearches({\n  search,\n  latestSearch,\n}: Props): ReactElement {\n  const [recentSearches, setRecentSearches] = useState(\n    localStorage.getItem(\"recentSearches\")\n  );\n\n  // Update recent searches from localStorage after new redux latestSearch\n  useEffect(() => {\n    setRecentSearches(localStorage.getItem(\"recentSearches\"));\n  }, [latestSearch]);\n\n  let recentSearchesHtml = null;\n  let recentSearchesCount = null;\n  if (recentSearches) {\n    const parsedData = JSON.parse(recentSearches);\n    recentSearchesCount = parsedData.length;\n    const mappedSearches = parsedData.map(\n      (searchValue: string, index: number) => {\n        return (\n          <span\n            key={index}\n            onClick={() => search(searchValue)}\n            className={`${styles.recentSearch} textSmall`}\n          >\n            {searchValue}\n          </span>\n        );\n      }\n    );\n    recentSearchesHtml = (\n      <div className={styles.recentSearches}>\n        <h4>\n          {recentSearchesCount === 1\n            ? \"Last search\"\n            : `Last ${recentSearchesCount} searches`}\n        </h4>\n        {mappedSearches}\n      </div>\n    );\n  }\n  return <>{recentSearchesHtml}</>;\n}\n","import { ReactElement, useState } from \"react\";\n\nimport RecentSearches from \"./RecentSearches/RecentSearches\";\nimport styles from \"./UserSearch.module.scss\";\n\ninterface Props {\n  search: Function;\n  latestSearch: string | \"\";\n}\n\nexport default function UserSearch({\n  search,\n  latestSearch,\n}: Props): ReactElement {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const searchUsers = (searchValue: string) => {\n    // Empty string searches for most followed users\n    if (searchValue.trim() === \"\") {\n      search(\"followers:>=0\", \"followers\", false);\n    } else {\n      search(searchValue, \"best_match\");\n    }\n  };\n\n  let clearButton = null;\n  if (searchValue !== \"\") {\n    clearButton = (\n      <button\n        className={`button button_formButton button_transparent ${styles.clear}`}\n        onClick={() => setSearchValue(\"\")}\n      >\n        <span className=\"material-icons\">close</span>\n      </button>\n    );\n  }\n\n  return (\n    <>\n      <div className={styles.field + \" textField textField__withButton\"}>\n        <input\n          className={\n            searchValue !== \"\" ? styles.input__clearable : styles.input\n          }\n          type=\"text\"\n          placeholder=\"Search users from GitHub\"\n          onChange={(e) => setSearchValue(e.target.value)}\n          value={searchValue}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" && searchValue) {\n              e.preventDefault();\n              searchUsers(searchValue);\n            }\n          }}\n        />\n        {clearButton}\n        <button\n          // Disabled if current text value same as latest search OR if no searches and no value in the field\n          disabled={\n            searchValue === latestSearch ||\n            (latestSearch === \"\" && searchValue === \"\")\n          }\n          className=\"button button_formButton button_primary\"\n          onClick={() => searchUsers(searchValue)}\n        >\n          <span className=\"material-icons\">search</span>\n        </button>\n      </div>\n\n      <RecentSearches\n        latestSearch={latestSearch}\n        search={(searchValue: string) => searchUsers(searchValue)}\n      />\n    </>\n  );\n}\n","import { ReactElement, useEffect } from \"react\";\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector, RootStateOrAny } from \"react-redux\";\n\nimport { setViewMode, setLatestSearch, fetchUsers } from \"./UserListSlice\";\nimport styles from \"./UserListPage.module.scss\";\nimport UserList from \"./UserList/UserList\";\nimport ViewModes from \"./ViewModes/ViewModes\";\nimport UserSearch from \"./UserSearch/UserSearch\";\nimport { useDocTitle } from \"../../hooks/useDocTitle\";\nimport { ViewMode } from \"./types\";\n\nexport default function UserListPage(): ReactElement {\n  // REDUX STATE DATA\n  const users: User[] = useSelector(\n    (state: RootStateOrAny) => state.userListPageReducer.users\n  );\n  const usersError: string = useSelector(\n    (state: RootStateOrAny) => state.userListPageReducer.usersError\n  );\n  const usersStatus: string = useSelector(\n    (state: RootStateOrAny) => state.userListPageReducer.usersStatus\n  );\n  const viewMode: \"gridMode\" | \"listMode\" = useSelector(\n    (state: RootStateOrAny) => state.userListPageReducer.viewMode\n  );\n  const latestSearch: string = useSelector(\n    (state: RootStateOrAny) => state.userListPageReducer.latestSearch\n  );\n\n  const defaultPageTitle = \"Most followed GitHub users\";\n  const searchPageTitle = `Search results for \"${latestSearch}\"`;\n\n  // Set document title to latest search if it exists in redux\n  const [setDocTitle] = useDocTitle(\n    latestSearch ? searchPageTitle : defaultPageTitle\n  );\n\n  // REDUX DISPATCHES\n  const dispatch: Dispatch<any> = useDispatch();\n\n  // Initially fetch most followed users, set initial document title\n  useEffect(() => {\n    // Update only no users already in redux state\n    if (users.length < 1) {\n      setDocTitle(defaultPageTitle);\n      dispatch(fetchUsers({query: \"followers:>=0\", sort: \"followers\"}));\n    }\n  }, []);\n\n  // Fetch users, save redux searched string and localStorage latest only search if manually entered value\n  const dispatchSearch = (\n    searchValue: string,\n    searchSort: string,\n    includeSearchString?: boolean\n  ) => {\n    dispatch(fetchUsers({query: searchValue, sort: searchSort}));\n\n    if (includeSearchString) {\n      dispatch(setLatestSearch(searchValue));\n      saveSearchToLocalStorage(searchValue);\n      setDocTitle(`Search results for \"${searchValue}\"`);\n    } else {\n      dispatch(setLatestSearch(\"\"));\n      setDocTitle(defaultPageTitle);\n    }\n  };\n\n  const saveSearchToLocalStorage = (search: string) => {\n    let recentSearches = [];\n    if (localStorage.getItem(\"recentSearches\") !== null) {\n      recentSearches = JSON.parse(localStorage.getItem(\"recentSearches\") || \"\");\n    }\n    if (!recentSearches.includes(search)) {\n      recentSearches.unshift(search);\n      if (recentSearches.length > 3) {\n        recentSearches.pop();\n      }\n    }\n    localStorage.setItem(\"recentSearches\", JSON.stringify(recentSearches));\n  };\n\n  let searchTitle = null;\n  if (latestSearch) {\n    searchTitle = <h1 className={styles.title}>{searchPageTitle}</h1>;\n  } else {\n    searchTitle = <h1 className={styles.title}>{defaultPageTitle}</h1>;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <UserSearch\n        search={(\n          searchValue: string,\n          searchSort: string,\n          includeSearchString: boolean = true\n        ) => dispatchSearch(searchValue, searchSort, includeSearchString)}\n        latestSearch={latestSearch}\n      />\n      <div className={styles.toolbar}>\n        {searchTitle}\n        <ViewModes\n          viewMode={viewMode}\n          setViewMode={(viewMode: ViewMode) =>\n            dispatch(setViewMode(viewMode))\n          }\n        />\n      </div>\n\n      <UserList\n        users={users}\n        usersStatus={usersStatus}\n        usersError={usersError}\n        viewMode={viewMode}\n      />\n    </div>\n  );\n}\n","import { Route, Switch } from \"react-router-dom\";\nimport UserPage from \"./components/UserPage/UserPage\";\nimport UserListPage from \"./components/UserListPage/UserListPage\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Switch>\n        <Route exact path=\"/\" component={UserListPage} key=\"home\" />\n        <Route path=\"/:user\" component={UserPage} key=\"user\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { AnyAction } from \"redux\";\n\nimport * as actionTypes from \"../actionTypes\";\n\nexport interface UserPageState {\n  userPageUser: User | null;\n  userError: string | null;\n  userStatus: \"idle\" | \"loading \" | \"success\" | \"failed\";\n}\n\nconst userPageState: UserPageState = {\n  userPageUser: null,\n  userError: null,\n  userStatus: \"idle\"\n};\n\nconst userPageReducer = (state = userPageState, action: AnyAction) => {\n  switch (action.type) {\n    case actionTypes.FETCH_USER_LOADING:\n      return {\n        ...state,\n        userError: null,\n        userStatus: \"loading\",\n      };\n\n    case actionTypes.FETCH_USER_SUCCESS:\n      return {\n        ...state,\n        userStatus: \"success\",\n        userPageUser: action.user,\n      };\n        \n    case actionTypes.FETCH_USER_ERROR:\n      return {\n        ...state,\n        userError: action.error.message,\n        userStatus: \"failed\",\n      };\n\n    case actionTypes.FETCH_USERPAGE_REPOS:\n      let fetchUserListReposUser = {...state.userPageUser};\n        fetchUserListReposUser[\"repos\"] = action.repos;\n        return {\n          ...state,\n          userPageUser: fetchUserListReposUser,\n        };\n\n    case actionTypes.FETCH_USERPAGE_ORGS:\n      let fetchUserListOrgsUser = {...state.userPageUser};\n      fetchUserListOrgsUser[\"orgs\"] = action.orgs;\n        return {\n          ...state,\n          userPageUser: fetchUserListOrgsUser,\n        };\n  }\n  return state;\n};\n\nexport default userPageReducer;\n","import { combineReducers } from \"redux\";\n// import userListPageReducer from \"./userListPageReducer\";\nimport userListReducer from \"../../components/UserListPage/UserListSlice\";\nimport userPageReducer from \"./userPageReducer\";\n\nexport default combineReducers({\n  userListPageReducer: userListReducer,\n  userPageReducer: userPageReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit'\nimport thunkMiddleware from \"redux-thunk\";\n\nimport reducer from \"./reducers/reducer\";\n\nconst store = configureStore({\n  reducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunkMiddleware),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {stateOne: StateOneType, stateTwo: StateTwoType}\nexport type AppDispatch = typeof store.dispatch\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}